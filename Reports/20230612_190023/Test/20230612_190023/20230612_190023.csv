Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
Test,,,,2023-06-12 19:00:38,2023-06-12 19:00:50,12.221s,FAILED
,,,,,,,
Test Cases/GetTokenCase,,,,2023-06-12 19:00:38,2023-06-12 19:00:46,8.194s,PASSED
currentTime = ZonedDateTime.now(ZoneOffset.ofHours(7)),,,,2023-06-12 19:00:40,2023-06-12 19:00:40,0.071s,PASSED
"formatter = DateTimeFormatter.ofPattern(""yyyy-MM-dd'T'HH:mm:ssxxx"")",,,,2023-06-12 19:00:40,2023-06-12 19:00:40,0.033s,PASSED
formattedTimestamp = currentTime.format(formatter),,,,2023-06-12 19:00:40,2023-06-12 19:00:40,0.009s,PASSED
"println(""Timestamp: "" + formattedTimestamp)",,,,2023-06-12 19:00:40,2023-06-12 19:00:40,0.014s,PASSED
TIMESTAMP = formattedTimestamp,,,,2023-06-12 19:00:40,2023-06-12 19:00:41,1.122s,PASSED
"signatureResponse = sendRequest(findTestObject(""Postman/auth/GET SIGNATURE""))",,,,2023-06-12 19:00:41,2023-06-12 19:00:45,4.656s,PASSED
"signature = getElementPropertyValue(signatureResponse, ""signature"")",,,,2023-06-12 19:00:45,2023-06-12 19:00:46,0.162s,PASSED
"println(""signature is :"" + signature)",,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.002s,PASSED
AUTH_SIGNATURE = signature,,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.001s,PASSED
"tokenResponse = sendRequest(findTestObject(""Postman/auth/GET TOKEN"", [""TIMESTAMP1"":TIMESTAMP, ""AUTH_SIGNATURE1"":AUTH_SIGNATURE]))",,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.646s,PASSED
"verifyResponseStatusCode(tokenResponse, 200)",,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.032s,PASSED
"token = getElementPropertyValue(tokenResponse, ""accessToken"")",,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.053s,PASSED
"println(""Token is : "" + token)",,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.001s,PASSED
TOKEN = token,,,,2023-06-12 19:00:46,2023-06-12 19:00:46,0.001s,PASSED
,,,,,,,
Test Cases/InquiryDanaCase(Saving),,,,2023-06-12 19:00:46,2023-06-12 19:00:50,3.381s,FAILED
currentTime = ZonedDateTime.now(ZoneOffset.ofHours(7)),,,,2023-06-12 19:00:47,2023-06-12 19:00:47,0.004s,PASSED
"formatter = DateTimeFormatter.ofPattern(""MMdd"")",,,,2023-06-12 19:00:47,2023-06-12 19:00:47,0.003s,PASSED
formattedLocalDate = currentTime.format(formatter),,,,2023-06-12 19:00:47,2023-06-12 19:00:48,0.005s,PASSED
"println(""Local Date: "" + formattedLocalDate)",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
localDate = formattedLocalDate,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.001s,PASSED
currentTime1 = ZonedDateTime.now(ZoneOffset.ofHours(7)),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.001s,PASSED
"formatter1 = DateTimeFormatter.ofPattern(""HHmmss"")",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
formattedLocalTime = currentTime1.format(formatter1),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
"println(""Local Time: "" + formattedLocalTime)",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
localTime = formattedLocalTime,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.003s,PASSED
formattedTransDateTime = formattedLocalDate + formattedLocalTime,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.003s,PASSED
"println(""Trans Date Time: "" + formattedTransDateTime)",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
transDateTime = formattedTransDateTime,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.001s,PASSED
currentTime2 = ZonedDateTime.now(ZoneOffset.ofHours(7)),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
"formatter2 = DateTimeFormatter.ofPattern(""MMdd"")",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.001s,PASSED
formattedSettlementDate = plusDays(1).format(formatter2),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.004s,PASSED
"println(""SettlementDate: "" + formattedSettlementDate)",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.004s,PASSED
settlementDate = formattedSettlementDate,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
currentTime3 = ZonedDateTime.now(ZoneOffset.ofHours(7)),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
"formatter3 = DateTimeFormatter.ofPattern(""yyMMddHHmmss"")",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.002s,PASSED
formattedReferenceNumber = currentTime3.format(formatter3),,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.004s,PASSED
"println(""Reference Number: "" + formattedReferenceNumber)",,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.001s,PASSED
referenceNumber = formattedReferenceNumber,,,,2023-06-12 19:00:48,2023-06-12 19:00:48,0.000s,PASSED
"signatureResponse = sendRequest(findTestObject(""Postman/emoney/opendenom Success/Saving/GET SIGNATURE SERVICE -  emoney dana open denom inquiry""))",,,,2023-06-12 19:00:48,2023-06-12 19:00:49,1.072s,PASSED
"signature = getElementPropertyValue(signatureResponse, ""signature"")",,,,2023-06-12 19:00:49,2023-06-12 19:00:49,0.061s,PASSED
"println(""signature service is :"" + signature)",,,,2023-06-12 19:00:49,2023-06-12 19:00:49,0.001s,PASSED
SERVICE_SIGNATURE = signature,,,,2023-06-12 19:00:49,2023-06-12 19:00:49,0.000s,PASSED
"danaInquiryResponse = sendRequest(findTestObject(""Postman/emoney/opendenom Success/Saving/dana inquiry"", [""HOST1"":HOST, ""TIMESTAMP1"":TIMESTAMP, ""SERVICE_SIGNATURE1"":SERVICE_SIGNATURE, ""transDateTime1"":transDateTime, ""localTime1"":localTime, ... ]))",,,,2023-06-12 19:00:49,2023-06-12 19:00:50,0.995s,PASSED
"verifyResponseStatusCode(danaInquiryResponse, 200)",,,,2023-06-12 19:00:50,2023-06-12 19:00:50,0.064s,FAILED
