<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="Test" time="13.84" tests="2" failures="0" errors="0">
   <testsuite name="Test" tests="2" failures="0" errors="0" time="13.84" skipped="0" timestamp="2023-06-13 11:47:02" hostname="ABISHAR - Lenovo" id="Test Suites/Test">
      <properties>
         <property name="deviceName" value=""/>
         <property name="devicePlatform" value=""/>
         <property name="logFolder" value="C:\\Users\\ABISHAR\\Katalon Studio\\My First API Project\\Reports\\20230613_114648\\Test\\20230613_114648"/>
         <property name="logFiles" value="C:\\Users\\ABISHAR\\Katalon Studio\\My First API Project\\Reports\\20230613_114648\\Test\\20230613_114648\\execution0.log"/>
         <property name="attachments" value=""/>
         <property name="hostName" value="ABISHAR - Lenovo"/>
         <property name="hostAddress" value="10.131.0.18"/>
         <property name="os" value="Windows 10 64bit"/>
         <property name="katalonVersion" value="8.6.5.208"/>
      </properties>
      <testcase name="Test Cases/GetTokenCase" time="7.488" classname="Test Cases/GetTokenCase" status="PASSED">
         <system-out><![CDATA[2023-06-13 11:47:03 - [TEST_CASE][PASSED] - Test Cases/GetTokenCase: Test Cases/GetTokenCase

2023-06-13 11:47:04 - [TEST_STEP][PASSED] - currentTime = ZonedDateTime.now(ZoneOffset.ofHours(7)): null

2023-06-13 11:47:04 - [TEST_STEP][PASSED] - formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ssxxx"): null

2023-06-13 11:47:04 - [TEST_STEP][PASSED] - formattedTimestamp = currentTime.format(formatter): null

2023-06-13 11:47:04 - [TEST_STEP][PASSED] - println("Timestamp: " + formattedTimestamp): null

2023-06-13 11:47:04 - [TEST_STEP][PASSED] - TIMESTAMP = formattedTimestamp: null

2023-06-13 11:47:05 - [TEST_STEP][PASSED] - signatureResponse = sendRequest(findTestObject("Postman/auth/GET SIGNATURE")): Send request successfully

2023-06-13 11:47:09 - [MESSAGE][INFO] - HAR: C:\Users\ABISHAR\Katalon Studio\My First API Project\Reports\20230613_114648\Test\20230613_114648\requests\main\0.har

2023-06-13 11:47:09 - [MESSAGE][PASSED] - Send request successfully

2023-06-13 11:47:09 - [TEST_STEP][PASSED] - signature = getElementPropertyValue(signatureResponse, "signature"): null

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - println("signature is :" + signature): null

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - AUTH_SIGNATURE = signature: null

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - tokenResponse = sendRequest(findTestObject("Postman/auth/GET TOKEN", ["TIMESTAMP1":TIMESTAMP, "AUTH_SIGNATURE1":AUTH_SIGNATURE])): Send request successfully

2023-06-13 11:47:10 - [MESSAGE][INFO] - HAR: C:\Users\ABISHAR\Katalon Studio\My First API Project\Reports\20230613_114648\Test\20230613_114648\requests\main\1.har

2023-06-13 11:47:10 - [MESSAGE][PASSED] - Send request successfully

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - verifyResponseStatusCode(tokenResponse, 200): Verify response status code successfully

2023-06-13 11:47:10 - [MESSAGE][PASSED] - Verify response status code successfully

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - token = getElementPropertyValue(tokenResponse, "accessToken"): null

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - println("Token is : " + token): null

2023-06-13 11:47:10 - [TEST_STEP][PASSED] - TOKEN = token: null]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <testcase name="Test Cases/InquiryDanaCase(Saving)" time="5.625" classname="Test Cases/InquiryDanaCase(Saving)" status="PASSED">
         <system-out><![CDATA[2023-06-13 11:47:10 - [TEST_CASE][PASSED] - Test Cases/InquiryDanaCase(Saving): Test Cases/InquiryDanaCase(Saving)

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - currentTime = ZonedDateTime.now(ZoneOffset.ofHours(7)): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formatter = DateTimeFormatter.ofPattern("MMdd"): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formattedLocalDate = currentTime.format(formatter): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - println("Local Date: " + formattedLocalDate): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - localDate = formattedLocalDate: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - currentTime1 = ZonedDateTime.now(ZoneOffset.ofHours(7)): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formatter1 = DateTimeFormatter.ofPattern("HHmmss"): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formattedLocalTime = currentTime1.format(formatter1): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - println("Local Time: " + formattedLocalTime): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - localTime = formattedLocalTime: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formattedTransDateTime = formattedLocalDate + formattedLocalTime: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - println("Trans Date Time: " + formattedTransDateTime): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - transDateTime = formattedTransDateTime: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - currentTime2 = ZonedDateTime.now(ZoneOffset.ofHours(7)): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formatter2 = DateTimeFormatter.ofPattern("MMdd"): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formattedSettlementDate = plusDays(1).format(formatter2): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - println("SettlementDate: " + formattedSettlementDate): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - settlementDate = formattedSettlementDate: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - currentTime3 = ZonedDateTime.now(ZoneOffset.ofHours(7)): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formatter3 = DateTimeFormatter.ofPattern("yyMMddHHmmss"): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - formattedReferenceNumber = currentTime3.format(formatter3): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - println("Reference Number: " + formattedReferenceNumber): null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - referenceNumber = formattedReferenceNumber: null

2023-06-13 11:47:11 - [TEST_STEP][PASSED] - signatureResponse = sendRequest(findTestObject("Postman/emoney/opendenom Success/Saving/GET SIGNATURE SERVICE -  emoney dana open denom inquiry")): Send request successfully

2023-06-13 11:47:12 - [MESSAGE][INFO] - HAR: C:\Users\ABISHAR\Katalon Studio\My First API Project\Reports\20230613_114648\Test\20230613_114648\requests\main\2.har

2023-06-13 11:47:12 - [MESSAGE][PASSED] - Send request successfully

2023-06-13 11:47:12 - [TEST_STEP][PASSED] - signature = getElementPropertyValue(signatureResponse, "signature"): null

2023-06-13 11:47:12 - [TEST_STEP][PASSED] - println("signature service is :" + signature): null

2023-06-13 11:47:12 - [TEST_STEP][PASSED] - SERVICE_SIGNATURE = signature: null

2023-06-13 11:47:12 - [TEST_STEP][PASSED] - danaInquiryResponse = sendRequest(findTestObject("Postman/emoney/opendenom Success/Saving/dana inquiry")): Send request successfully

2023-06-13 11:47:16 - [MESSAGE][INFO] - HAR: C:\Users\ABISHAR\Katalon Studio\My First API Project\Reports\20230613_114648\Test\20230613_114648\requests\main\3.har

2023-06-13 11:47:16 - [MESSAGE][PASSED] - Send request successfully

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - RC = getElementPropertyValue(danaInquiryResponse, "responseCode"): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - println("RC is : " + RC): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - transactionData = getElementPropertyValue(danaInquiryResponse, "transactionData"): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - transactionData = transactionData: null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - println("transaction data is : " + transactionData): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - nationalPmtData = getElementPropertyValue(danaInquiryResponse, "nationalPmtData"): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - nationalPmtData = nationalPmtData: null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - println("transaction data is : " + nationalPmtData): null

2023-06-13 11:47:16 - [TEST_STEP][PASSED] - verifyResponseStatusCode(danaInquiryResponse, 200): Verify response status code successfully

2023-06-13 11:47:16 - [MESSAGE][PASSED] - Verify response status code successfully]]></system-out>
         <system-err><![CDATA[]]></system-err>
      </testcase>
      <system-out><![CDATA[2023-06-13 11:47:02 - [TEST_SUITE][PASSED] - Test: Test Cases/InquiryDanaCase(Saving)]]></system-out>
      <system-err><![CDATA[]]></system-err>
   </testsuite>
</testsuites>
